{"version":3,"file":"static/js/543.49865886.chunk.js","mappings":"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","sources":["utils/loadingStatus.js","pages/ShopPage.js","services/productsAPI.js","utils/mockGenerator.js"],"sourcesContent":["export const LOADING_STATUS=Object.freeze({\r\n    IDLE:\"idle\",\r\n    PENDING:\"pending\",\r\n    REJECTED:\"rejected\",\r\n    RESOLVED:\"resolved\",\r\n})","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {PaginationContainer, ProductsListContainer} from \"../components/products_list_view/productsView.styled\";\r\nimport ProductCard from \"../components/product_card/ProductCard\";\r\nimport SectionTitle from \"../components/section_title/SectionTitle\";\r\nimport {getAllProducts} from '../services'\r\nimport {FaArrowRight} from \"react-icons/fa\";\r\nimport {IoIosArrowBack, IoIosArrowForward} from \"react-icons/io\";\r\nimport ProductCardLoading from \"../components/product_card/ProductCardLoading\";\r\nimport {generateMockArray} from \"../utils/mockGenerator\";\r\nimport {LOADING_STATUS} from \"../utils/loadingStatus\";\r\n\r\nfunction ShopPage(props) {\r\n    const [products, setProducts] = useState([])\r\n    const [limit, setLimit] = useState(8)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(3)\r\n    const [loadingStatus,setLoadingStatus]=useState(LOADING_STATUS.IDLE)\r\n    const [error,setError]=useState(null)\r\n    const handleChange = (event) => {\r\n        setCurrentPage(parseInt(event.target.value))\r\n    }\r\n    const handleIncrement = () => {\r\n        if (currentPage >= totalPages) return\r\n        setCurrentPage(prevState => prevState + 1)\r\n    }\r\n    const handleDecrement = () => {\r\n        if (currentPage <= 1) return\r\n        setCurrentPage(prevState => prevState - 1)\r\n    }\r\n\r\n    const getPreloadedCards = useMemo(() => {\r\n        return generateMockArray(limit).map((_, idx) =>(<ProductCardLoading key={idx}/>))\r\n    },[limit])\r\n\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus(LOADING_STATUS.PENDING)\r\n        getAllProducts(currentPage, limit)\r\n            .then(response => {\r\n                setProducts(response.data)\r\n                setLoadingStatus(LOADING_STATUS.RESOLVED)\r\n            })\r\n            .catch(e => {\r\n                setLoadingStatus(LOADING_STATUS.REJECTED)\r\n                setError(e)\r\n                console.log(e)\r\n            })\r\n    }, [currentPage, setProducts,limit,setLoadingStatus])\r\n\r\n    return (\r\n        <>\r\n            <SectionTitle>OUR PRODUCTS</SectionTitle>\r\n            {loadingStatus === LOADING_STATUS.IDLE && <ProductsListContainer>\r\n                {getPreloadedCards}\r\n            </ProductsListContainer>}\r\n            {loadingStatus === LOADING_STATUS.PENDING && <ProductsListContainer>\r\n                {getPreloadedCards}\r\n            </ProductsListContainer>}\r\n            {loadingStatus === LOADING_STATUS.RESOLVED && <ProductsListContainer>\r\n                {products.length > 0 && products.map(({productTitle, chip, img, price, rating, id, productType}) => (\r\n                    <ProductCard key={id} productTitle={productTitle} chip={chip} img={img} price={price}\r\n                                 rating={rating} id={id} productType={productType}/>\r\n                ))}\r\n            </ProductsListContainer>}\r\n            {loadingStatus === LOADING_STATUS.REJECTED && <h1>Ups some error {error.message}</h1>}\r\n            <PaginationContainer>\r\n                <button type='button' className='btn btn-link' onClick={handleIncrement}>\r\n                    <span>Next page</span> <FaArrowRight/>\r\n                </button>\r\n                <span className='text'>Page</span>\r\n                <div className='current_page'>\r\n                    <input type=\"number\" value={currentPage} onChange={handleChange} readOnly/>\r\n                </div>\r\n                <span className='text'>of {totalPages}</span>\r\n                <div className=\"btn-pagination-box\">\r\n                    <button type='button' className='btn btn-pagination' onClick={handleDecrement}><IoIosArrowBack/>\r\n                    </button>\r\n                    <button type='button' className='btn btn-pagination' onClick={handleIncrement}><IoIosArrowForward/>\r\n                    </button>\r\n                </div>\r\n            </PaginationContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShopPage;","import axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://65be5084dcfcce42a6f23aa3.mockapi.io'\r\n\r\naxios.defaults.baseURL = BASE_URL\r\nexport const getAllProducts = async (currentPage,limit) => {\r\n    return await axios.get(`/products?page=${currentPage}&limit=${limit}`)\r\n}\r\nexport const getProductById = async (id) => {\r\n    return await axios.get(`/products/${id}`)\r\n}\r\nexport const getProductsByCategory = async (category,currentPage,limit) => {\r\n    return  await axios.get(`/products?category=${category}&page=${currentPage}&limit=${limit}`)\r\n}","export const generateMockArray=(length)=>{\r\n    return Array.apply(null, Array(length))\r\n}"],"names":["LOADING_STATUS","Object","freeze","IDLE","PENDING","REJECTED","RESOLVED","props","products","setProducts","useState","limit","setLimit","currentPage","setCurrentPage","totalPages","setTotalPages","loadingStatus","setLoadingStatus","error","setError","handleIncrement","prevState","getPreloadedCards","useMemo","generateMockArray","map","_","idx","_jsx","ProductCardLoading","useEffect","getAllProducts","then","response","data","catch","e","console","log","_jsxs","_Fragment","children","SectionTitle","ProductsListContainer","length","_ref","productTitle","chip","img","price","rating","id","productType","ProductCard","message","PaginationContainer","type","className","onClick","FaArrowRight","value","onChange","event","parseInt","target","readOnly","handleDecrement","IoIosArrowBack","IoIosArrowForward","axios","defaults","baseURL","async","get","concat","getProductById","getProductsByCategory","category","Array","apply"],"sourceRoot":""}